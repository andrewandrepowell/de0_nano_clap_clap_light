// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 16.1 (Build Build 196 10/24/2016)
// Created on Thu Dec 29 14:04:46 2016

DetermineClap DetermineClap_inst
(
	.clock(clock_sig) ,	// input  clock_sig
	.nreset(nreset_sig) ,	// input  nreset_sig
	.energy_data(energy_data_sig) ,	// input [ENERGY_WIDTH-1:0] energy_data_sig
	.energy_valid(energy_valid_sig) ,	// input  energy_valid_sig
	.energy_ready(energy_ready_sig) ,	// output  energy_ready_sig
	.claps_out_data(claps_out_data_sig) ,	// output [CLAPS_OUT_WIDTH-1:0] claps_out_data_sig
	.claps_out_valid(claps_out_valid_sig) ,	// output  claps_out_valid_sig
	.claps_out_ready(claps_out_ready_sig) 	// input  claps_out_ready_sig
);

defparam DetermineClap_inst.ENERGY_WIDTH = 16;
defparam DetermineClap_inst.ENERGY_HIGH_THRESHOLD = 100;
defparam DetermineClap_inst.ENERGY_LOW_THRESHOLD = 50;
defparam DetermineClap_inst.SAMPLE_HIGH_THRESHOLD = 4;
defparam DetermineClap_inst.SAMPLE_MIDDLE_THRESHOLD = 10;
defparam DetermineClap_inst.SAMPLE_LOW_THRESHOLD = 200;
defparam DetermineClap_inst.CLAPS_SAMPLE_THRESHOLD = 200;
defparam DetermineClap_inst.CLAPS_OUT_WIDTH = 16;
