'''
Created on Dec 18, 2016

@author: andrewandrepowell2
'''

import numpy as np
from matplotlib import pyplot as pp

def create_signal( amount, mu=0, sigma=1 ):
    return np.random.normal( mu, sigma, amount )

def create_clap( amplitude, samples_per_period ):
    return amplitude*np.sin( 2*np.pi*np.arange( samples_per_period )/samples_per_period ) 

def add_clap( (x,nclaps), loc, amplitude, samples_per_period ):
    x[loc:loc+samples_per_period] = create_clap( amplitude, samples_per_period )
    nclaps = nclaps+1
    return (x,nclaps)

if __name__ == '__main__':
    
    # Define the parameters of the computer-generated clap.
    SIG_NUMBER_OF_SAMPLES = 128
    CLAP_NUMBER_OF_SAMPLES = 8
    CLAP_AMPLITUDE = 32
    NUMPY_DATA_DT = np.dtype( np.int16 )

    # Build the computer-generated clap.
    nclaps = 0
    x = create_signal( SIG_NUMBER_OF_SAMPLES )
    x,nclaps = add_clap( (x,nclaps), 16, CLAP_AMPLITUDE, CLAP_NUMBER_OF_SAMPLES )
    x = add_clap( (x,nclaps), 64, CLAP_AMPLITUDE, CLAP_NUMBER_OF_SAMPLES )
    
    # Convert computer-generated clap into the same type as the real data.
    x = x.astype( NUMPY_DATA_DT, copy=False )
    
    # Display the clap.
    pp.figure()
    pp.plot( x )
    pp.show()
    
    fname = 'nclap_2_ntrial_1'
    pass